{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.92.45157",
      "templateHash": "16476736036867866268"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "allowedValues": [
        "EastUS",
        "EastUS2",
        "WestUS",
        "WestUS2",
        "WestUS3",
        "CentralUS",
        "NorthCentralUS",
        "SouthCentralUS",
        "WestEurope",
        "NorthEurope",
        "SoutheastAsia",
        "EastAsia",
        "JapanEast",
        "JapanWest",
        "AustraliaEast",
        "AustraliaSoutheast",
        "CentralIndia",
        "SouthIndia",
        "CanadaCentral",
        "CanadaEast",
        "UKSouth",
        "UKWest",
        "FranceCentral",
        "FranceSouth",
        "KoreaCentral",
        "KoreaSouth",
        "GermanyWestCentral",
        "GermanyNorth",
        "NorwayWest",
        "NorwayEast",
        "SwitzerlandNorth",
        "SwitzerlandWest",
        "UAENorth",
        "UAECentral",
        "SouthAfricaNorth",
        "SouthAfricaWest",
        "BrazilSouth",
        "BrazilSoutheast",
        "QatarCentral",
        "ChinaNorth",
        "ChinaEast",
        "ChinaNorth2",
        "ChinaEast2"
      ],
      "metadata": {
        "description": "The location where the resources will be created."
      }
    },
    "modeldatacenter": {
      "type": "string",
      "allowedValues": [
        "EastUS",
        "EastUS2",
        "SwedenCentral",
        "WestUS3"
      ],
      "metadata": {
        "description": "The Data Center where the model is deployed."
      }
    },
    "aiserviceimagerepository": {
      "type": "string",
      "defaultValue": "csacto.azurecr.io/kmgs/aiservice",
      "metadata": {
        "description": "The AI Service Image Repository"
      }
    },
    "documentprocessorrepository": {
      "type": "string",
      "defaultValue": "csacto.azurecr.io/kmgs/kernelmemory",
      "metadata": {
        "description": "The Document Processor Image Tag"
      }
    },
    "frontapprepository": {
      "type": "string",
      "defaultValue": "csacto.azurecr.io/kmgs/frontapp",
      "metadata": {
        "description": "The Front App Image Tag"
      }
    }
  },
  "variables": {
    "resourceprefix": "[padLeft(take(uniqueString(deployment().name), 5), 5, '0')]",
    "resourceprefix_name": "kmgs"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('blob{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[format('blob{0}', variables('resourceprefix'))]"
          },
          "location": {
            "value": "[deployment().location]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "17219071465908456117"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Name of the storage account"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for the storage account"
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "metadata": {
                "description": "The SKU of the storage account"
              }
            },
            "kind": {
              "type": "string",
              "defaultValue": "StorageV2",
              "metadata": {
                "description": "The kind of the storage account"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-04-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('skuName')]"
              },
              "kind": "[parameters('kind')]",
              "properties": {
                "accessTier": "Hot"
              }
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('search-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "searchServiceName": {
            "value": "[format('search-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]"
          },
          "location": {
            "value": "[deployment().location]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "8314461658125970303"
            }
          },
          "parameters": {
            "searchServiceName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2023-11-01",
              "name": "[parameters('searchServiceName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "standard"
              },
              "properties": {
                "replicaCount": 1,
                "partitionCount": 1
              }
            }
          ],
          "outputs": {
            "searchServiceName": {
              "type": "string",
              "value": "[parameters('searchServiceName')]"
            },
            "searchServiceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Search/searchServices', parameters('searchServiceName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('acr{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acrName": {
            "value": "[format('acr{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]"
          },
          "location": {
            "value": "[deployment().location]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "17816429755608478227"
            }
          },
          "parameters": {
            "acrName": {
              "type": "string",
              "defaultValue": "acr-"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Provide a location for the registry."
              }
            },
            "acrSku": {
              "type": "string",
              "defaultValue": "Basic",
              "metadata": {
                "description": "Provide a tier of your Azure Container Registry."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2021-06-01-preview",
              "name": "[parameters('acrName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('acrSku')]"
              },
              "properties": {
                "adminUserEnabled": true
              }
            }
          ],
          "outputs": {
            "createdAcrName": {
              "type": "string",
              "value": "[parameters('acrName')]"
            },
            "createdAcrId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))]"
            },
            "acrEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName')), '2021-06-01-preview').loginServer]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('cognitiveservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "cognitiveServiceName": {
            "value": "[format('cognitiveservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]"
          },
          "location": {
            "value": "eastus"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "17536703316121698178"
            }
          },
          "parameters": {
            "cognitiveServiceName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2022-03-01",
              "name": "[parameters('cognitiveServiceName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "sku": {
                "name": "s0"
              },
              "kind": "FormRecognizer",
              "properties": {}
            }
          ],
          "outputs": {
            "cognitiveServiceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('cognitiveServiceName'))]"
            },
            "cognitiveServiceName": {
              "type": "string",
              "value": "[parameters('cognitiveServiceName')]"
            },
            "cognitiveServiceEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('cognitiveServiceName')), '2022-03-01').endpoint]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('openaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "openAIServiceName": {
            "value": "[format('openaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]"
          },
          "location": {
            "value": "[parameters('modeldatacenter')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "14282116885051803230"
            }
          },
          "parameters": {
            "openAIServiceName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('openAIServiceName')]",
              "location": "[parameters('location')]",
              "kind": "OpenAI",
              "sku": {
                "name": "S0"
              },
              "properties": {}
            }
          ],
          "outputs": {
            "openAIServiceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAIServiceName'))]"
            },
            "openAIServiceName": {
              "type": "string",
              "value": "[parameters('openAIServiceName')]"
            },
            "openAIServiceEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAIServiceName')), '2023-05-01').endpoint]"
            },
            "oopenAIServiceLocation": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAIServiceName')), '2023-05-01', 'full').location]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "gpt-4o-mini",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parentResourceName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('openaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.openAIServiceName.value]"
          },
          "name": {
            "value": "gpt-4o-mini"
          },
          "model": {
            "value": {
              "name": "gpt-4o-mini",
              "version": "2024-07-18",
              "raiPolicyName": "",
              "capacity": 1,
              "scaleType": "Standard"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "16249975073350744416"
            }
          },
          "parameters": {
            "parentResourceName": {
              "type": "string"
            },
            "model": {
              "type": "object"
            },
            "name": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('parentResourceName'), parameters('name'))]",
              "sku": {
                "name": "Standard",
                "capacity": "[parameters('model').capacity]"
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('model').name]",
                  "version": "[parameters('model').version]"
                }
              }
            }
          ],
          "outputs": {
            "openAIServiceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('parentResourceName'))]"
            },
            "deployedModelName": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "deployedModelId": {
              "type": "string",
              "value": "[parameters('model').name]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('openaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "text-embedding-large",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parentResourceName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('openaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.openAIServiceName.value]"
          },
          "name": {
            "value": "text-embedding-large"
          },
          "model": {
            "value": {
              "name": "text-embedding-3-large",
              "version": "1",
              "raiPolicyName": "",
              "capacity": 1,
              "scaleType": "Standard"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "16249975073350744416"
            }
          },
          "parameters": {
            "parentResourceName": {
              "type": "string"
            },
            "model": {
              "type": "object"
            },
            "name": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('parentResourceName'), parameters('name'))]",
              "sku": {
                "name": "Standard",
                "capacity": "[parameters('model').capacity]"
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('model').name]",
                  "version": "[parameters('model').version]"
                }
              }
            }
          ],
          "outputs": {
            "openAIServiceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('parentResourceName'))]"
            },
            "deployedModelName": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "deployedModelId": {
              "type": "string",
              "value": "[parameters('model').name]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('openaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', 'gpt-4o-mini')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('cosmosdb-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "cosmosDbAccountName": {
            "value": "[format('cosmosdb-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]"
          },
          "location": {
            "value": "[deployment().location]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "671917544735572119"
            }
          },
          "parameters": {
            "cosmosDbAccountName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2024-05-15",
              "name": "[parameters('cosmosDbAccountName')]",
              "location": "[parameters('location')]",
              "kind": "MongoDB",
              "properties": {
                "databaseAccountOfferType": "Standard",
                "locations": [
                  {
                    "locationName": "[parameters('location')]",
                    "failoverPriority": 0
                  }
                ],
                "apiProperties": {
                  "serverVersion": "4.2"
                },
                "capabilities": [
                  {
                    "name": "EnableMongo"
                  }
                ]
              }
            }
          ],
          "outputs": {
            "cosmosDbAccountName": {
              "type": "string",
              "value": "[parameters('cosmosDbAccountName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "prepareValues",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourceprefix": {
            "value": "[variables('resourceprefix')]"
          },
          "resourceprefix_name": {
            "value": "[variables('resourceprefix_name')]"
          },
          "openaiServiceEndpoint": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('openaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.openAIServiceEndpoint.value]"
          },
          "openaiServiceModelName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', 'gpt-4o-mini'), '2022-09-01').outputs.deployedModelName.value]"
          },
          "openaiServiceEmbeddingModelName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', 'text-embedding-large'), '2022-09-01').outputs.deployedModelName.value]"
          },
          "cognitiveServiceEndpoint": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('cognitiveservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.cognitiveServiceEndpoint.value]"
          },
          "storageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('blob{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.storageAccountName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "140383341098305417"
            }
          },
          "parameters": {
            "resourceprefix": {
              "type": "string"
            },
            "resourceprefix_name": {
              "type": "string"
            },
            "openaiServiceEndpoint": {
              "type": "string"
            },
            "openaiServiceModelName": {
              "type": "string"
            },
            "openaiServiceEmbeddingModelName": {
              "type": "string"
            },
            "cognitiveServiceEndpoint": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            }
          },
          "variables": {
            "keyValueNames": [
              "Application:AIServices:GPT-4o-mini:Endpoint",
              "Application:AIServices:GPT-4o-mini:Key",
              "Application:AIServices:GPT-4o-mini:ModelName",
              "Application:AIServices:GPT-4o:Endpoint",
              "Application:AIServices:GPT-4o:Key",
              "Application:AIServices:GPT-4o:ModelName",
              "Application:AIServices:TextEmbedding:Endpoint",
              "Application:AIServices:TextEmbedding:Key",
              "Application:AIServices:TextEmbedding:ModelName",
              "Application:Services:CognitiveService:DocumentIntelligence:APIKey",
              "Application:Services:CognitiveService:DocumentIntelligence:Endpoint",
              "Application:Services:KernelMemory:Endpoint",
              "Application:Services:PersistentStorage:CosmosMongo:Collections:ChatHistory:Collection",
              "Application:Services:PersistentStorage:CosmosMongo:Collections:ChatHistory:Database",
              "Application:Services:PersistentStorage:CosmosMongo:Collections:DocumentManager:Collection",
              "Application:Services:PersistentStorage:CosmosMongo:Collections:DocumentManager:Database",
              "Application:Services:PersistentStorage:CosmosMongo:ConnectionString",
              "Application:Services:AzureAISearch:APIKey",
              "Application:Services:AzureAISearch:Endpoint",
              "KernelMemory:Services:AzureAIDocIntel:APIKey",
              "KernelMemory:Services:AzureAIDocIntel:Endpoint",
              "KernelMemory:Services:AzureAISearch:APIKey",
              "KernelMemory:Services:AzureAISearch:Endpoint",
              "KernelMemory:Services:AzureBlobs:Account",
              "KernelMemory:Services:AzureBlobs:ConnectionString",
              "KernelMemory:Services:AzureBlobs:Container",
              "KernelMemory:Services:AzureOpenAIEmbedding:APIKey",
              "KernelMemory:Services:AzureOpenAIEmbedding:Deployment",
              "KernelMemory:Services:AzureOpenAIEmbedding:Endpoint",
              "KernelMemory:Services:AzureOpenAIText:APIKey",
              "KernelMemory:Services:AzureOpenAIText:Deployment",
              "KernelMemory:Services:AzureOpenAIText:Endpoint",
              "KernelMemory:Services:AzureQueues:Account",
              "KernelMemory:Services:AzureQueues:ConnectionString"
            ]
          },
          "resources": [],
          "outputs": {
            "keyvalueNames": {
              "type": "array",
              "value": "[variables('keyValueNames')]"
            },
            "keyValueValues": {
              "type": "array",
              "value": [
                "[parameters('openaiServiceEndpoint')]",
                "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', format('openaiservice-{0}{1}', parameters('resourceprefix_name'), parameters('resourceprefix'))), '2023-05-01').key1]",
                "[parameters('openaiServiceModelName')]",
                "[parameters('openaiServiceEndpoint')]",
                "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', format('openaiservice-{0}{1}', parameters('resourceprefix_name'), parameters('resourceprefix'))), '2023-05-01').key1]",
                "[parameters('openaiServiceModelName')]",
                "[parameters('openaiServiceEndpoint')]",
                "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', format('openaiservice-{0}{1}', parameters('resourceprefix_name'), parameters('resourceprefix'))), '2023-05-01').key1]",
                "[parameters('openaiServiceEmbeddingModelName')]",
                "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', format('cognitiveservice-{0}{1}', parameters('resourceprefix_name'), parameters('resourceprefix'))), '2022-03-01').key1]",
                "[parameters('cognitiveServiceEndpoint')]",
                "http://kernel-memory",
                "ChatHistory",
                "DPS",
                "Documents",
                "DPS",
                "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', format('cosmosdb-{0}{1}', parameters('resourceprefix_name'), parameters('resourceprefix'))), '2024-05-15').connectionStrings[0].connectionString]",
                "[listAdminKeys(resourceId('Microsoft.Search/searchServices', format('search-{0}{1}', parameters('resourceprefix_name'), parameters('resourceprefix'))), '2023-11-01').primaryKey]",
                "[format('https://search-{0}{1}.search.windows.net', parameters('resourceprefix_name'), parameters('resourceprefix'))]",
                "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', format('cognitiveservice-{0}{1}', parameters('resourceprefix_name'), parameters('resourceprefix'))), '2022-03-01').key1]",
                "[parameters('cognitiveServiceEndpoint')]",
                "[listAdminKeys(resourceId('Microsoft.Search/searchServices', format('search-{0}{1}', parameters('resourceprefix_name'), parameters('resourceprefix'))), '2023-11-01').primaryKey]",
                "[format('https://search-{0}{1}.search.windows.net', parameters('resourceprefix_name'), parameters('resourceprefix'))]",
                "[parameters('storageAccountName')]",
                "[listKeys(resourceId('Microsoft.Storage/storageAccounts', format('blob{0}', parameters('resourceprefix'))), '2021-04-01').keys[0].value]",
                "smemory",
                "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', format('openaiservice-{0}{1}', parameters('resourceprefix_name'), parameters('resourceprefix'))), '2023-05-01').key1]",
                "[parameters('openaiServiceEmbeddingModelName')]",
                "[parameters('openaiServiceEndpoint')]",
                "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', format('openaiservice-{0}{1}', parameters('resourceprefix_name'), parameters('resourceprefix'))), '2023-05-01').key1]",
                "[parameters('openaiServiceModelName')]",
                "[parameters('openaiServiceEndpoint')]",
                "[parameters('storageAccountName')]",
                "[listKeys(resourceId('Microsoft.Storage/storageAccounts', format('blob{0}', parameters('resourceprefix'))), '2021-04-01').keys[0].value]"
              ]
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('cognitiveservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('search-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('cosmosdb-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('openaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', 'gpt-4o-mini')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', 'text-embedding-large')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('blob{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('appconfig-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appConfigName": {
            "value": "[format('appconfig-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]"
          },
          "keyValueNames": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', 'prepareValues'), '2022-09-01').outputs.keyvalueNames.value]"
          },
          "keyValueValues": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', 'prepareValues'), '2022-09-01').outputs.keyValueValues.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "12191851741890310222"
            }
          },
          "parameters": {
            "appConfigName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "skuName": {
              "type": "string",
              "defaultValue": "Standard"
            },
            "keyValueNames": {
              "type": "array"
            },
            "keyValueValues": {
              "type": "array"
            }
          },
          "resources": [
            {
              "type": "Microsoft.AppConfiguration/configurationStores",
              "apiVersion": "2023-03-01",
              "name": "[parameters('appConfigName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('skuName')]"
              }
            },
            {
              "copy": {
                "name": "appConfigKeyValues",
                "count": "[length(parameters('keyValueNames'))]"
              },
              "type": "Microsoft.AppConfiguration/configurationStores/keyValues",
              "apiVersion": "2023-03-01",
              "name": "[format('{0}/{1}', parameters('appConfigName'), parameters('keyValueNames')[copyIndex()])]",
              "properties": {
                "value": "[parameters('keyValueValues')[copyIndex()]]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.AppConfiguration/configurationStores', parameters('appConfigName'))]"
              ]
            }
          ],
          "outputs": {
            "appConfigId": {
              "type": "string",
              "value": "[resourceId('Microsoft.AppConfiguration/configurationStores', parameters('appConfigName'))]"
            },
            "appConfigEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.AppConfiguration/configurationStores', parameters('appConfigName')), '2023-03-01').endpoint]"
            },
            "appConfigServiceName": {
              "type": "string",
              "value": "[parameters('appConfigName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('cognitiveservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('search-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('cosmosdb-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('openaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', 'gpt-4o-mini')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', 'text-embedding-large')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', 'prepareValues')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('blob{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('loganalysis-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "workspaceName": {
            "value": "[format('loganalysis-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]"
          },
          "location": {
            "value": "[deployment().location]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "1863587729906770689"
            }
          },
          "parameters": {
            "workspaceName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Log Analytics workspace"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location where the Log Analytics workspace will be created"
              }
            },
            "pricingTier": {
              "type": "string",
              "defaultValue": "PerGB2018",
              "metadata": {
                "description": "The pricing tier for the Log Analytics workspace"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('workspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "[parameters('pricingTier')]"
                },
                "retentionInDays": 30
              }
            }
          ],
          "outputs": {
            "workspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
            },
            "workspaceName": {
              "type": "string",
              "value": "[parameters('workspaceName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('containerappenv-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "environmentName": {
            "value": "env-dkm"
          },
          "loganalysisName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('loganalysis-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.workspaceName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "7731169924759839408"
            }
          },
          "parameters": {
            "environmentName": {
              "type": "string"
            },
            "loganalysisName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2024-03-01",
              "name": "[parameters('environmentName')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('loganalysisName')), '2021-06-01').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('loganalysisName')), '2021-06-01').primarySharedKey]"
                  }
                }
              }
            }
          ],
          "outputs": {
            "environmentId": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('loganalysis-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('containerappkm-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "containerappName": {
            "value": "kernel-memory"
          },
          "environmentid": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappenv-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.environmentId.value]"
          },
          "containerimagename": {
            "value": "kernelmemory"
          },
          "containerimagetag": {
            "value": "[parameters('documentprocessorrepository')]"
          },
          "targetPort": {
            "value": 9001
          },
          "envvars": {
            "value": [
              {
                "name": "APP_CONFIG_ENDPOINT",
                "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('appconfig-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.appConfigEndpoint.value]"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "6005413781380711949"
            }
          },
          "parameters": {
            "containerappName": {
              "type": "string"
            },
            "environmentid": {
              "type": "string"
            },
            "containerimagename": {
              "type": "string"
            },
            "containerimagetag": {
              "type": "string"
            },
            "isIngress": {
              "type": "bool",
              "defaultValue": false
            },
            "targetPort": {
              "type": "int",
              "defaultValue": 80
            },
            "cpuresource": {
              "type": "int",
              "defaultValue": 2
            },
            "memoryresource": {
              "type": "string",
              "defaultValue": "4.0Gi"
            },
            "envvars": {
              "type": "array",
              "defaultValue": []
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2024-03-01",
              "name": "[parameters('containerappName')]",
              "location": "[resourceGroup().location]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "managedEnvironmentId": "[parameters('environmentid')]",
                "configuration": {
                  "ingress": {
                    "external": "[parameters('isIngress')]",
                    "targetPort": "[parameters('targetPort')]"
                  }
                },
                "template": {
                  "containers": [
                    {
                      "name": "[parameters('containerimagename')]",
                      "image": "[parameters('containerimagetag')]",
                      "resources": {
                        "cpu": "[parameters('cpuresource')]",
                        "memory": "[parameters('memoryresource')]"
                      },
                      "env": "[parameters('envvars')]"
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 1
                  }
                }
              }
            }
          ],
          "outputs": {
            "managedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('containerappName')), '2024-03-01', 'full').identity.principalId]"
            },
            "fqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('containerappName')), '2024-03-01').configuration.ingress.fqdn]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('appconfig-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappenv-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "assignAppConfigRole",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappkm-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.managedIdentityPrincipalId.value]"
          },
          "appConfigName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('appconfig-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.appConfigServiceName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "2071651358658615292"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string",
              "metadata": {
                "description": "The ID of the principal (user, group, or service principal) to assign the role to"
              }
            },
            "appConfigName": {
              "type": "string",
              "metadata": {
                "description": "The name of the App Configuration service"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.AppConfiguration/configurationStores/{0}', parameters('appConfigName'))]",
              "name": "[guid(resourceGroup().id, 'App Configuration Data Reader', parameters('principalId'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '516239f1-63e1-4d78-a4de-a74fb236a071')]",
                "principalId": "[parameters('principalId')]"
              }
            }
          ],
          "outputs": {
            "roleAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(resourceId('Microsoft.AppConfiguration/configurationStores', parameters('appConfigName')), 'Microsoft.Authorization/roleAssignments', guid(resourceGroup().id, 'App Configuration Data Reader', parameters('principalId')))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('appconfig-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappkm-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "assignStorageBlobRole",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappkm-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.managedIdentityPrincipalId.value]"
          },
          "storageBlobName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('blob{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.storageAccountName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "2643620706889026468"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string",
              "metadata": {
                "description": "The ID of the principal (user, group, or service principal) to assign the role to"
              }
            },
            "storageBlobName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Storage Blob"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageBlobName'))]",
              "name": "[guid(resourceGroup().id, 'Storage Blob Data Contributor', parameters('principalId'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[parameters('principalId')]"
              }
            }
          ],
          "outputs": {
            "roleAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', parameters('storageBlobName')), 'Microsoft.Authorization/roleAssignments', guid(resourceGroup().id, 'Storage Blob Data Contributor', parameters('principalId')))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappkm-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('blob{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "assignStorageQueueRole",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappkm-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.managedIdentityPrincipalId.value]"
          },
          "storageAccount": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('blob{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.storageAccountName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "1450431787420111891"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string",
              "metadata": {
                "description": "The ID of the principal (user, group, or service principal) to assign the role to"
              }
            },
            "storageAccount": {
              "type": "string",
              "metadata": {
                "description": "The name of the Storage Queue"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccount'))]",
              "name": "[guid(resourceGroup().id, 'Storage Queue Data Contributor', parameters('principalId'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '974c5e8b-45b9-4653-ba55-5f855dd0fb88')]",
                "principalId": "[parameters('principalId')]"
              }
            }
          ],
          "outputs": {
            "roleAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount')), 'Microsoft.Authorization/roleAssignments', guid(resourceGroup().id, 'Storage Queue Data Contributor', parameters('principalId')))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappkm-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('blob{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('containerappaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "containerappName": {
            "value": "ai-service"
          },
          "environmentid": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappenv-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.environmentId.value]"
          },
          "containerimagename": {
            "value": "aiservice"
          },
          "containerimagetag": {
            "value": "[parameters('aiserviceimagerepository')]"
          },
          "isIngress": {
            "value": true
          },
          "targetPort": {
            "value": 9001
          },
          "envvars": {
            "value": [
              {
                "name": "APP_CONFIG_ENDPOINT",
                "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('appconfig-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.appConfigEndpoint.value]"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "6005413781380711949"
            }
          },
          "parameters": {
            "containerappName": {
              "type": "string"
            },
            "environmentid": {
              "type": "string"
            },
            "containerimagename": {
              "type": "string"
            },
            "containerimagetag": {
              "type": "string"
            },
            "isIngress": {
              "type": "bool",
              "defaultValue": false
            },
            "targetPort": {
              "type": "int",
              "defaultValue": 80
            },
            "cpuresource": {
              "type": "int",
              "defaultValue": 2
            },
            "memoryresource": {
              "type": "string",
              "defaultValue": "4.0Gi"
            },
            "envvars": {
              "type": "array",
              "defaultValue": []
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2024-03-01",
              "name": "[parameters('containerappName')]",
              "location": "[resourceGroup().location]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "managedEnvironmentId": "[parameters('environmentid')]",
                "configuration": {
                  "ingress": {
                    "external": "[parameters('isIngress')]",
                    "targetPort": "[parameters('targetPort')]"
                  }
                },
                "template": {
                  "containers": [
                    {
                      "name": "[parameters('containerimagename')]",
                      "image": "[parameters('containerimagetag')]",
                      "resources": {
                        "cpu": "[parameters('cpuresource')]",
                        "memory": "[parameters('memoryresource')]"
                      },
                      "env": "[parameters('envvars')]"
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 1
                  }
                }
              }
            }
          ],
          "outputs": {
            "managedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('containerappName')), '2024-03-01', 'full').identity.principalId]"
            },
            "fqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('containerappName')), '2024-03-01').configuration.ingress.fqdn]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('appconfig-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappenv-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "assignAppConfigRoleAIService",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.managedIdentityPrincipalId.value]"
          },
          "appConfigName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('appconfig-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.appConfigServiceName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "2071651358658615292"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string",
              "metadata": {
                "description": "The ID of the principal (user, group, or service principal) to assign the role to"
              }
            },
            "appConfigName": {
              "type": "string",
              "metadata": {
                "description": "The name of the App Configuration service"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.AppConfiguration/configurationStores/{0}', parameters('appConfigName'))]",
              "name": "[guid(resourceGroup().id, 'App Configuration Data Reader', parameters('principalId'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '516239f1-63e1-4d78-a4de-a74fb236a071')]",
                "principalId": "[parameters('principalId')]"
              }
            }
          ],
          "outputs": {
            "roleAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(resourceId('Microsoft.AppConfiguration/configurationStores', parameters('appConfigName')), 'Microsoft.Authorization/roleAssignments', guid(resourceGroup().id, 'App Configuration Data Reader', parameters('principalId')))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('appconfig-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "assignStorageBlobRoleAIService",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.managedIdentityPrincipalId.value]"
          },
          "storageBlobName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('blob{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.storageAccountName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "2643620706889026468"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string",
              "metadata": {
                "description": "The ID of the principal (user, group, or service principal) to assign the role to"
              }
            },
            "storageBlobName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Storage Blob"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageBlobName'))]",
              "name": "[guid(resourceGroup().id, 'Storage Blob Data Contributor', parameters('principalId'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[parameters('principalId')]"
              }
            }
          ],
          "outputs": {
            "roleAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', parameters('storageBlobName')), 'Microsoft.Authorization/roleAssignments', guid(resourceGroup().id, 'Storage Blob Data Contributor', parameters('principalId')))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('blob{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('containerappfron-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "resourceGroup": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "containerappName": {
            "value": "frontapp"
          },
          "environmentid": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappenv-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.environmentId.value]"
          },
          "containerimagename": {
            "value": "frontapp"
          },
          "containerimagetag": {
            "value": "[parameters('frontapprepository')]"
          },
          "isIngress": {
            "value": true
          },
          "targetPort": {
            "value": 5900
          },
          "envvars": {
            "value": [
              {
                "name": "DISABLE_AUTH",
                "value": "true"
              },
              {
                "name": "VITE_API_ENDPOINT",
                "value": "[format('https://{0}', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.fqdn.value)]"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "6005413781380711949"
            }
          },
          "parameters": {
            "containerappName": {
              "type": "string"
            },
            "environmentid": {
              "type": "string"
            },
            "containerimagename": {
              "type": "string"
            },
            "containerimagetag": {
              "type": "string"
            },
            "isIngress": {
              "type": "bool",
              "defaultValue": false
            },
            "targetPort": {
              "type": "int",
              "defaultValue": 80
            },
            "cpuresource": {
              "type": "int",
              "defaultValue": 2
            },
            "memoryresource": {
              "type": "string",
              "defaultValue": "4.0Gi"
            },
            "envvars": {
              "type": "array",
              "defaultValue": []
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2024-03-01",
              "name": "[parameters('containerappName')]",
              "location": "[resourceGroup().location]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "managedEnvironmentId": "[parameters('environmentid')]",
                "configuration": {
                  "ingress": {
                    "external": "[parameters('isIngress')]",
                    "targetPort": "[parameters('targetPort')]"
                  }
                },
                "template": {
                  "containers": [
                    {
                      "name": "[parameters('containerimagename')]",
                      "image": "[parameters('containerimagetag')]",
                      "resources": {
                        "cpu": "[parameters('cpuresource')]",
                        "memory": "[parameters('memoryresource')]"
                      },
                      "env": "[parameters('envvars')]"
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 1
                  }
                }
              }
            }
          ],
          "outputs": {
            "managedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('containerappName')), '2024-03-01', 'full').identity.principalId]"
            },
            "fqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('containerappName')), '2024-03-01').configuration.ingress.fqdn]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappenv-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
      ]
    }
  ],
  "outputs": {
    "WebAppUrl": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('containerappfron-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.fqdn.value]"
    },
    "gs_resourcegroup_name": {
      "type": "string",
      "value": "[format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))]"
    },
    "gs_storageaccount_name": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('blob{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.storageAccountName.value]"
    },
    "gs_azsearch_name": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('search-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.searchServiceName.value]"
    },
    "gs_containerregistry_name": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('acr{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.createdAcrName.value]"
    },
    "gs_azcognitiveservice_name": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('cognitiveservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.cognitiveServiceName.value]"
    },
    "gs_azcognitiveservice_endpoint": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('cognitiveservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.cognitiveServiceEndpoint.value]"
    },
    "gs_openaiservice_name": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('openaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.openAIServiceName.value]"
    },
    "gs_openaiservice_location": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('openaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.oopenAIServiceLocation.value]"
    },
    "gs_openaiservice_endpoint": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('openaiservice-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.openAIServiceEndpoint.value]"
    },
    "gs_openaiservicemodels_gpt4o_model_name": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', 'gpt-4o-mini'), '2022-09-01').outputs.deployedModelName.value]"
    },
    "gs_openaiservicemodels_gpt4o_model_id": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', 'gpt-4o-mini'), '2022-09-01').outputs.deployedModelId.value]"
    },
    "gs_openaiservicemodels_text_embedding_model_name": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', 'text-embedding-large'), '2022-09-01').outputs.deployedModelName.value]"
    },
    "gs_openaiservicemodels_text_embedding_model_id": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', 'text-embedding-large'), '2022-09-01').outputs.deployedModelId.value]"
    },
    "gs_cosmosdb_name": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('cosmosdb-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.cosmosDbAccountName.value]"
    },
    "gs_appconfig_id": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('appconfig-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.appConfigId.value]"
    },
    "gs_appconfig_endpoint": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), 'Microsoft.Resources/deployments', format('appconfig-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix'))), '2022-09-01').outputs.appConfigEndpoint.value]"
    },
    "gs_resourcegroup_id": {
      "type": "string",
      "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}{1}', variables('resourceprefix_name'), variables('resourceprefix')))]"
    }
  }
}